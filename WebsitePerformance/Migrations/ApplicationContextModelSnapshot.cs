// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebsitePerformance.Data;

namespace WebsitePerformance.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebsitePerformance.Models.PerformanceSitemap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseUri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PerformanceSitemaps");
                });

            modelBuilder.Entity("WebsitePerformance.Models.UriPerformance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AverageTime")
                        .HasColumnType("float");

                    b.Property<long>("MaxTime")
                        .HasColumnType("bigint");

                    b.Property<long>("MinTime")
                        .HasColumnType("bigint");

                    b.Property<int?>("PerformanceSitemapId")
                        .HasColumnType("int");

                    b.Property<string>("Uri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PerformanceSitemapId");

                    b.ToTable("UriPerformances");
                });

            modelBuilder.Entity("WebsitePerformance.Models.UriPerformance", b =>
                {
                    b.HasOne("WebsitePerformance.Models.PerformanceSitemap", null)
                        .WithMany("UriPerformances")
                        .HasForeignKey("PerformanceSitemapId");
                });
#pragma warning restore 612, 618
        }
    }
}
